{
  "version": 3,
  "sources": [
    "../../../usr/local/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "main.js",
    "public/javascripts/angular-modal/modal.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require('./public/javascripts/angular-modal/modal.js');",
    "/*\n * @license\n * angular-modal v0.5.0\n * (c) 2013 Brian Ford http://briantford.com\n * License: MIT\n */\n\n'use strict';\n\nangular.module('btford.modal', []).\n    factory('btfModal', ['$animate', '$compile', '$rootScope', '$controller', '$q', '$http', '$templateCache', modalFactoryFactory]);\n\nfunction modalFactoryFactory($animate, $compile, $rootScope, $controller, $q, $http, $templateCache) {\n  return function modalFactory (config) {\n    if (!(!config.template ^ !config.templateUrl)) {\n      throw new Error('Expected modal to have exacly one of either `template` or `templateUrl`');\n    }\n\n    var template      = config.template,\n        controller    = config.controller || null,\n        controllerAs  = config.controllerAs,\n        container     = angular.element(config.container || document.body),\n        element       = null,\n        html,\n        scope;\n\n    if (config.template) {\n      html = $q.when(config.template);\n    } else {\n      html = $http.get(config.templateUrl, {\n        cache: $templateCache\n      }).\n      then(function (response) {\n        return response.data;\n      });\n    }\n\n    function activate (locals) {\n      return html.then(function (html) {\n        if (!element) {\n          attach(html, locals);\n        }\n      });\n    }\n\n\n    function attach (html, locals) {\n      element = angular.element(html);\n      if (element.length === 0) {\n        throw new Error('The template contains no elements; you need to wrap text nodes')\n      }\n      scope = $rootScope.$new();\n      if (controller) {\n        if (!locals) {\n          locals = {};\n        }\n        locals.$scope = scope;\n        var ctrl = $controller(controller, locals);\n        if (controllerAs) {\n          scope[controllerAs] = ctrl;\n        }\n      } else if (locals) {\n        for (var prop in locals) {\n          scope[prop] = locals[prop];\n        }\n      }\n      $compile(element)(scope);\n      return $animate.enter(element, container);\n    }\n\n    function deactivate () {\n      if (!element) {\n        return $q.when();\n      }\n      return $animate.leave(element).then(function () {\n        scope.$destroy();\n        scope = null;\n        element.remove();\n        element = null;\n      });\n    }\n\n    function active () {\n      return !!element;\n    }\n\n    return {\n      activate: activate,\n      deactivate: deactivate,\n      active: active\n    };\n  };\n}"
  ]
}