"use strict";describe("btfModal",function(){var t,e,a;beforeEach(module("btford.modal")),beforeEach(function(){t=angular.element("<div></div>")}),afterEach(function(){t=null}),describe("without animations",function(){beforeEach(inject(function(t,n,i){e=t,a=n,a.greeting="こんばんは",i.put("test.html",[200,"<div>{{greeting}}</div>",{}])})),it("should not show a modal initially",function(){e({templateUrl:"test.html",container:t});a.$digest(),expect(t.text()).toBe("")}),it("should throw if called without a `template` or `templateUrl` option",function(){expect(function(){e({})}).toThrow()}),it("should throw if called with a text node",function(){var t=e({template:"hey"});expect(function(){t.activate(),a.$digest()}).toThrow()}),it("should throw if called with both `template` and `templateUrl` options",function(){expect(function(){e({template:"foo",templateUrl:"foo.html"})}).toThrow()}),describe("#activate",function(){it("should show a modal when activated with `templateUrl`",function(){var n=e({templateUrl:"test.html",container:t});n.activate(),a.$digest(),expect(t.text()).toBe("こんばんは")}),it("should show a modal when activated with `template`",function(){var n=e({template:"<span>{{greeting}}</span>",container:t});n.activate(),a.$digest(),expect(t.text()).toBe("こんばんは")}),it("should instantiate a controller via the `controller` option",function(){var n=e({template:"<span>{{greeting}}</span>",controller:function(t){t.greeting="goodnight"},container:t});n.activate(),a.$digest(),expect(t.text()).toBe("goodnight")}),it("should expose a controller to the scope via the `controllerAs` option",function(){var n=e({template:"<span>{{ctrl.greeting}}</span>",controller:function(){this.greeting="boa noite"},controllerAs:"ctrl",container:t});n.activate(),a.$digest(),expect(t.text()).toBe("boa noite")}),it("should pass locals to the controller scope",function(){var n=e({template:"<span>{{ctrl.greeting}}</span>",controller:function(t){this.greeting=t},controllerAs:"ctrl",container:t});n.activate({greeting:"おはよう〜"}),a.$digest(),expect(t.text()).toBe("おはよう〜")}),it("should pass locals to the modal scope if there is no controller",function(){var n=e({template:"<span>{{greeting}}</span>",container:t});n.activate({greeting:"bon soir"}),a.$digest(),expect(t.text()).toBe("bon soir")}),it("should not activate multiple times",function(){var n=e({template:"<span>x</span>",container:t});n.activate(),a.$digest(),n.activate(),a.$digest(),expect(t.text()).toBe("x")}),it("should resolve a promise after activating",function(){var n=jasmine.createSpy("activated"),i=e({template:"<span>x</span>",container:t});i.activate().then(n),expect(n).not.toHaveBeenCalled(),a.$digest(),expect(n).toHaveBeenCalled()})}),describe("#deactivate",function(){it("should remove a modal when deactivated",function(){var n=e({template:"<span>{{greeting}}</span>",container:t});n.activate(),a.$digest(),n.deactivate(),a.$digest(),expect(t.text()).toBe("")}),it("should destroy the scope when deactivated",inject(function(a){var n=jasmine.createSpy("onDestroy"),i=e({template:"<span>{{greeting}}</span>",container:t,controller:function(t){t.$on("$destroy",n)}});i.activate(),i.deactivate().then(n),a.defer.flush(),expect(n).toHaveBeenCalled()})),it("should resolve a promise after deactivating",inject(function(a){var n=jasmine.createSpy("deactivated"),i=e({template:"<span>x</span>",container:t});i.activate(),i.deactivate().then(n),a.defer.flush(),expect(n).toHaveBeenCalled()}))}),describe("#active",function(){it("should return the state of the modal",inject(function(n){var i=e({template:"<span>{{greeting}}</span>",container:t});a.$digest(),expect(i.active()).toBe(!1),i.activate(),n.defer.flush(),expect(i.active()).toBe(!0)}))})}),describe("with animations",function(){var e,n;beforeEach(module("ngAnimateMock")),beforeEach(inject(function(i,o,c){a=o,e=c,n=i({template:"<span>animations!</span>",container:t})})),it("should trigger an enter animation when activated",function(){n.activate(),a.$digest();var t=e.queue.shift();expect(t.event).toBe("enter")}),it("should trigger a leave animation when deactivated",function(){n.activate(),a.$digest(),e.queue.shift(),n.deactivate(),a.$digest();var t=e.queue.shift();expect(t.event).toBe("leave")})})});